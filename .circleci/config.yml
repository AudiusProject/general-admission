version: 2.1

jobs:
  init:
    working_directory: ~/general-admission
    docker:
      - image: circleci/node:10.13
    steps:
      - checkout

      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependency-cache-

      - run: rm -rf /home/circleci/audius-dapp/node_modules/websocket/.git

      - run: npm install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run: npm run lint
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules

  test-staging:
    working_directory: ~/general-admission
    docker:
      - image: circleci/node:10.13
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: run test
          command: npm run test:staging

  test-production:
    working_directory: ~/general-admission
    docker:
      - image: circleci/node:10.13
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: run test
          command: npm run test:production

workflows:
  version: 2
  test:
    jobs:
      - init
      - test-staging:
          requires:
            - init
      - test-production:
          requires:
            - init

  staging:
    triggers:
      - schedule:
          cron: "0,10,20,30,40,50 * * * * "
          filters:
            branches:
              only:
                - master
    jobs:
      - init
      - test-staging:
          requires:
            - init

  production:
    triggers:
      - schedule:
          cron: "0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58 * * * * "
          filters:
            branches:
              only:
                - master
    jobs:
      - init
      - test-production:
          requires:
            - init